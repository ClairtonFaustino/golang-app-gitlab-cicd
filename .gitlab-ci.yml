stages:
  - test
  - build
  - deploy

variables:
  IMAGE_TAG: "${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}" 
  DOCKER_DRIVER: overlay2
  K8S_NAMESPACE: $CI_PROJECT_ROOT_NAMESPACE
  IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

testes-unitarios:
  stage: test
  image: golang:1.22
  script:
    - go version
    - go build ./cmd/server

docker-build:
  stage: build
  image: docker:25
  services:
    - name: docker:25-dind
      command: ["--mtu=1460"]
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
  needs:
    - testes-unitarios

deploy-k8s:
  stage: deploy
  image: 
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl config set-cluster k8s --server=https://$KUBE_HOST:6443 --certificate-authority=$KUBE_API_CERT
    - kubectl config set-credentials go-k8s-sa --token=$KUBE_API_TOKEN --namespace=$K8S_NAMESPACE
    - kubectl config set-context k8s --cluster k8s --user go-k8s-sa --namespace=$K8S_NAMESPACE
    - kubectl config use-context k8s  
    - for file in k8s/*.yaml; do echo "Applying $file"; envsubst < "$file" | kubectl apply -f -; done
    - kubectl set image deployment/go-k8s go-app=$CI_REGISTRY_IMAGE:$IMAGE_TAG -n $K8S_NAMESPACE
    - kubectl rollout status deployment/go-k8s -n $K8S_NAMESPACE